//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.5

use sea_orm::entity::prelude::*;

use super::sea_orm_active_enums::RequestRating;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "level_request")]
pub struct Model {
	#[sea_orm(primary_key, auto_increment = false)]
	pub level_id: u64,
	pub discord_id: u64,
	#[sea_orm(unique)]
	pub discord_message_id: Option<u64>,
	#[sea_orm(unique)]
	pub discord_thread_id: Option<u64>,
	pub name: String,
	pub description: Option<String>,
	pub author: String,
	pub request_rating: RequestRating,
	pub you_tube_video_link: String
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(has_many = "super::review::Entity")]
	Review,
	#[sea_orm(
		belongs_to = "super::user::Entity",
		from = "Column::DiscordId",
		to = "super::user::Column::DiscordId",
		on_update = "NoAction",
		on_delete = "NoAction"
	)]
	User
}

impl Related<super::review::Entity> for Entity {
	fn to() -> RelationDef { Relation::Review.def() }
}

impl Related<super::user::Entity> for Entity {
	fn to() -> RelationDef { super::review::Relation::User.def() }

	fn via() -> Option<RelationDef> { Some(super::review::Relation::LevelRequest.def().rev()) }
}

impl ActiveModelBehavior for ActiveModel {}
